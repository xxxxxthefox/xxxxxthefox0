local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\134\124","\129\168\82\154"),function(v42) if (v9(v42,2)==81) then local v100=0;while true do if (v100==0) then v30=v8(v11(v42,1,1));return "";end end else local v101=v10(v8(v42,16));if v30 then local v108=v13(v101,v30);v30=nil;return v108;else return v101;end end end);local function v31(v43,v44,v45) if v45 then local v102=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-(2 -1))) + 1)) ;return v102-(v102%(2 -1)) ;else local v103=0;local v104;while true do if (v103==0) then v104=2^(v44-1) ;return (((v43%(v104 + v104))>=v104) and 1) or 0 ;end end end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47,v48=v9(v27,v29,v29 + (3 -1) );v29=v29 + 2 ;return (v48 * 256) + v47 ;end local function v34() local v49=0;local v50;local v51;local v52;local v53;while true do if (1==v49) then return (v53 * 16777216) + (v52 * 65536) + (v51 * 256) + v50 ;end if (0==v49) then v50,v51,v52,v53=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v49=1;end end end local function v35() local v54=v34();local v55=v34();local v56=1;local v57=(v31(v55,1,20) * (2^32)) + v54 ;local v58=v31(v55,21,31);local v59=((v31(v55,32)==1) and  -1) or 1 ;if (v58==0) then if (v57==0) then return v59 * 0 ;else local v109=0;while true do if (v109==0) then v58=1;v56=0;break;end end end elseif (v58==2047) then return ((v57==0) and (v59 * (1/(0 -0)))) or (v59 * NaN) ;end return v16(v59,v58-1023 ) * (v56 + (v57/(2^52))) ;end local function v36(v60) local v61=0;local v62;local v63;while true do if (v61==1) then v62=v11(v27,v29,(v29 + v60) -(620 -(555 + 64)) );v29=v29 + v60 ;v61=2;end if (v61==2) then v63={};for v110=1, #v62 do v63[v110]=v10(v9(v11(v62,v110,v110)));end v61=3;end if (v61==3) then return v14(v63);end if (v61==0) then v62=nil;if  not v60 then local v116=0;while true do if (v116==0) then v60=v34();if (v60==0) then return "";end break;end end end v61=1;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v64={};local v65={};local v66={};local v67={v64,v65,nil,v66};local v68=v34();local v69={};for v77=1,v68 do local v78=v32();local v79;if (v78==1) then v79=v32()~=0 ;elseif (v78==2) then v79=v35();elseif (v78==3) then v79=v36();end v69[v77]=v79;end v67[3]=v32();for v81=1,v34() do local v82=0;local v83;while true do if (v82==0) then v83=v32();if (v31(v83,1,1)==0) then local v117=0;local v118;local v119;local v120;while true do if (v117==3) then if (v31(v119,3,3)==1) then v120[4]=v69[v120[4]];end v64[v81]=v120;break;end if (1==v117) then v120={v33(),v33(),nil,nil};if (v118==0) then local v124=0;while true do if (0==v124) then v120[3]=v33();v120[4]=v33();break;end end elseif (v118==1) then v120[3]=v34();elseif (v118==(1 + 1)) then v120[3]=v34() -(2^16) ;elseif (v118==3) then local v333=0;while true do if (v333==0) then v120[3]=v34() -(2^16) ;v120[4]=v33();break;end end end v117=2;end if (v117==0) then v118=v31(v83,2,3);v119=v31(v83,4,933 -(214 + 713) );v117=1;end if (2==v117) then if (v31(v119,1,1)==1) then v120[2]=v69[v120[2]];end if (v31(v119,2,1 + 1 )==1) then v120[3]=v69[v120[3]];end v117=3;end end end break;end end end for v84=1,v34() do v65[v84-(878 -(282 + 595)) ]=v39();end return v67;end local function v40(v71,v72,v73) local v74=v71[1638 -(1523 + 114) ];local v75=v71[2];local v76=v71[3];return function(...) local v86=v74;local v87=v75;local v88=v76;local v89=v38;local v90=1;local v91= -1;local v92={};local v93={...};local v94=v20("#",...) -1 ;local v95={};local v96={};for v105=0 -0 ,v94 do if (v105>=v88) then v92[v105-v88 ]=v93[v105 + 1 ];else v96[v105]=v93[v105 + 1 ];end end local v97=(v94-v88) + 1 ;local v98;local v99;while true do v98=v86[v90];v99=v98[1];if (v99<=64) then if (v99<=31) then if (v99<=15) then if (v99<=7) then if (v99<=3) then if (v99<=1) then if (v99>0) then if (v96[v98[1067 -(68 + 997) ]]==v96[v98[1274 -(226 + 1044) ]]) then v90=v90 + 1 ;else v90=v98[3];end else v96[v98[2]]=v98[3] + v96[v98[4]] ;end elseif (v99>2) then local v134=v98[2];v96[v134]=v96[v134](v96[v134 + 1 ]);else local v136=0;local v137;local v138;local v139;while true do if (v136==1) then v139=v98[3];for v472=1,v139 do v138[v472]=v96[v137 + v472 ];end break;end if (0==v136) then v137=v98[2];v138=v96[v137];v136=1;end end end elseif (v99<=(21 -16)) then if (v99==4) then local v140=0;while true do if (v140==0) then v96[v98[2]]=v98[3]~=0 ;v90=v90 + 1 ;break;end end elseif  not v96[v98[2]] then v90=v90 + (118 -(32 + 85)) ;else v90=v98[3 + 0 ];end elseif (v99==6) then do return v96[v98[2]];end else v96[v98[1 + 1 ]][v98[960 -(892 + 65) ]]=v98[4];end elseif (v99<=11) then if (v99<=9) then if (v99>8) then v90=v98[3];else v96[v98[2]]=v40(v87[v98[3]],nil,v73);end elseif (v99>10) then local v145=0;local v146;local v147;while true do if (v145==0) then v146=v98[2];v147={};v145=1;end if (v145==1) then for v475=2 -1 , #v95 do local v476=v95[v475];for v514=0, #v476 do local v515=0;local v516;local v517;local v518;while true do if (0==v515) then v516=v476[v514];v517=v516[1 -0 ];v515=1;end if (v515==1) then v518=v516[2];if ((v517==v96) and (v518>=v146)) then v147[v518]=v517[v518];v516[1]=v147;end break;end end end end break;end end else do return;end end elseif (v99<=13) then if (v99==12) then local v148=0;local v149;while true do if (v148==0) then v149=v98[2];do return v96[v149](v21(v96,v149 + 1 ,v98[3]));end break;end end else v96[v98[2]][v96[v98[3]]]=v98[4];end elseif (v99==14) then if  not v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end else v96[v98[3 -1 ]]=v96[v98[353 -(87 + 263) ]] + v98[4] ;end elseif (v99<=23) then if (v99<=19) then if (v99<=17) then if (v99==16) then v72[v98[3]]=v96[v98[2]];else local v155=v98[2];v96[v155]=v96[v155](v21(v96,v155 + 1 ,v98[3]));end elseif (v99>(198 -(67 + 113))) then if v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end else v96[v98[2]]=v96[v98[3]]%v98[4] ;end elseif (v99<=(16 + 5)) then if (v99==20) then local v158=0;local v159;local v160;while true do if (v158==0) then v159=v98[7 -4 ];v160=v96[v159];v158=1;end if (v158==1) then for v477=v159 + 1 ,v98[4] do v160=v160   .. v96[v477] ;end v96[v98[2]]=v160;break;end end else v96[v98[2]]={};end elseif (v99==22) then do return v96[v98[2]]();end elseif (v96[v98[2]]<=v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3 + 0 ];end elseif (v99<=27) then if (v99<=25) then if (v99==24) then v96[v98[2]]=v96[v98[3]][v98[15 -11 ]];else local v164=v98[2];v96[v164](v21(v96,v164 + 1 ,v91));end elseif (v99==(978 -(802 + 150))) then v90=v98[3];else v96[v98[5 -3 ]]=v72[v98[3]];end elseif (v99<=29) then if (v99==28) then if (v96[v98[2]]<v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end else local v168=v98[2];local v169=v96[v168];for v334=v168 + (1 -0) ,v98[3] do v15(v169,v96[v334]);end end elseif (v99>30) then local v170=0;local v171;local v172;while true do if (v170==0) then v171=v98[2];v172=v96[v98[3]];v170=1;end if (v170==1) then v96[v171 + 1 ]=v172;v96[v171]=v172[v98[3 + 1 ]];break;end end elseif (v96[v98[2]]==v96[v98[4]]) then v90=v90 + (998 -(915 + 82)) ;else v90=v98[3];end elseif (v99<=47) then if (v99<=(110 -71)) then if (v99<=35) then if (v99<=33) then if (v99>32) then do return v96[v98[2]]();end else local v173=0;local v174;local v175;local v176;local v177;while true do if (v173==0) then v174=v98[2];v175,v176=v89(v96[v174](v21(v96,v174 + 1 ,v98[3])));v173=1;end if (v173==2) then for v478=v174,v91 do v177=v177 + 1 ;v96[v478]=v175[v177];end break;end if (v173==1) then v91=(v176 + v174) -(1 + 0) ;v177=0 -0 ;v173=2;end end end elseif (v99>34) then if (v98[2]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end else v96[v98[2]]= not v96[v98[3]];end elseif (v99<=37) then if (v99==36) then if (v98[2]<v96[v98[1191 -(1069 + 118) ]]) then v90=v98[3];else v90=v90 + 1 ;end else local v179=0;local v180;local v181;while true do if (v179==1) then for v481=v180 + 1 ,v91 do v15(v181,v96[v481]);end break;end if (v179==0) then v180=v98[2];v181=v96[v180];v179=1;end end end elseif (v99>38) then v96[v98[2]]=v96[v98[3]] -v96[v98[4]] ;elseif (v96[v98[2]]>v96[v98[8 -4 ]]) then v90=v90 + 1 ;else v90=v90 + v98[3] ;end elseif (v99<=(93 -50)) then if (v99<=(8 + 33)) then if (v99>40) then local v183=v98[2];do return v96[v183](v21(v96,v183 + 1 ,v98[3]));end else v96[v98[2]]=v96[v98[4 -1 ]] + v98[4] ;end elseif (v99==42) then v96[v98[2]][v96[v98[3]]]=v96[v98[4]];elseif (v96[v98[2]]~=v98[4]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=(45 + 0)) then if (v99==44) then v96[v98[793 -(368 + 423) ]]=v96[v98[3]];elseif (v96[v98[2]]~=v98[4]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99>46) then if (v96[v98[2]]<v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v96[v98[2]]~=v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=55) then if (v99<=51) then if (v99<=49) then if (v99==(150 -102)) then local v189=0;local v190;local v191;local v192;local v193;while true do if (v189==2) then for v482=v190,v91 do local v483=0;while true do if (v483==0) then v193=v193 + (19 -(10 + 8)) ;v96[v482]=v191[v193];break;end end end break;end if (v189==1) then v91=(v192 + v190) -1 ;v193=0;v189=2;end if (v189==0) then v190=v98[2];v191,v192=v89(v96[v190](v21(v96,v190 + 1 ,v91)));v189=1;end end else v96[v98[7 -5 ]]=v96[v98[3]] * v96[v98[4]] ;end elseif (v99==50) then local v195=v98[2];local v196=v96[v195];local v197=v96[v195 + 2 ];if (v197>0) then if (v196>v96[v195 + 1 ]) then v90=v98[3];else v96[v195 + 3 ]=v196;end elseif (v196<v96[v195 + 1 ]) then v90=v98[3];else v96[v195 + 3 ]=v196;end else local v198=0;local v199;local v200;local v201;while true do if (v198==1) then v201=v98[3];for v488=1,v201 do v200[v488]=v96[v199 + v488 ];end break;end if (v198==0) then v199=v98[444 -(416 + 26) ];v200=v96[v199];v198=1;end end end elseif (v99<=53) then if (v99>52) then v96[v98[2]][v98[3]]=v96[v98[4]];else local v204=0;local v205;while true do if (v204==0) then v205=v98[2];do return v21(v96,v205,v205 + v98[3] );end break;end end end elseif (v99>(172 -118)) then v96[v98[2]]=v96[v98[3]] + v96[v98[4]] ;else local v207=0;local v208;while true do if (0==v207) then v208=v98[2];do return v96[v208],v96[v208 + 1 ];end break;end end end elseif (v99<=59) then if (v99<=57) then if (v99==56) then v96[v98[2]]=v98[3]~=0 ;v90=v90 + 1 ;else local v210=v98[2];local v211,v212=v89(v96[v210](v21(v96,v210 + 1 ,v98[3])));v91=(v212 + v210) -1 ;local v213=0;for v335=v210,v91 do v213=v213 + 1 ;v96[v335]=v211[v213];end end elseif (v99==58) then local v214=v87[v98[2 + 1 ]];local v215;local v216={};v215=v18({},{[v7("\195\235\128\139\182\53\228","\80\156\180\233\229\210")]=function(v338,v339) local v340=v216[v339];return v340[1][v340[2]];end,[v7("\119\113\51\0\28\65\64\57\0\19","\107\40\46\93\101")]=function(v341,v342,v343) local v344=v216[v342];v344[1][v344[3 -1 ]]=v343;end});for v346=1,v98[4] do v90=v90 + (439 -(145 + 293)) ;local v347=v86[v90];if (v347[1]==97) then v216[v346-1 ]={v96,v347[3]};else v216[v346-1 ]={v72,v347[3]};end v95[ #v95 + 1 ]=v216;end v96[v98[2]]=v40(v214,v215,v73);else v96[v98[2]]=v96[v98[3]]%v98[4] ;end elseif (v99<=61) then if (v99==60) then if (v96[v98[2]]==v98[4]) then v90=v90 + 1 ;else v90=v98[3];end else v96[v98[2]]=v96[v98[3]]%v96[v98[4]] ;end elseif (v99<=62) then do return;end elseif (v99>63) then v96[v98[2]][v96[v98[3]]]=v96[v98[434 -(44 + 386) ]];else local v399=0;local v400;while true do if (v399==0) then v400=v98[2];v96[v400](v21(v96,v400 + 1 ,v98[3]));break;end end end elseif (v99<=96) then if (v99<=80) then if (v99<=72) then if (v99<=(1554 -(998 + 488))) then if (v99<=66) then if (v99==(21 + 44)) then if (v98[2]<v96[v98[4]]) then v90=v98[3];else v90=v90 + 1 ;end else v96[v98[2]]();end elseif (v99>67) then v96[v98[2]]=v73[v98[3]];else v96[v98[2]][v98[3 + 0 ]]=v98[4];end elseif (v99<=70) then if (v99==69) then v96[v98[2]]=v98[3]/v96[v98[4]] ;else v96[v98[2]]= not v96[v98[3]];end elseif (v99==(843 -(201 + 571))) then local v226=0;local v227;local v228;while true do if (0==v226) then v227=v98[3];v228=v96[v227];v226=1;end if (v226==1) then for v491=v227 + (1139 -(116 + 1022)) ,v98[4] do v228=v228   .. v96[v491] ;end v96[v98[2]]=v228;break;end end else local v229=v98[2];v96[v229]=v96[v229]();end elseif (v99<=76) then if (v99<=74) then if (v99==73) then local v231=v98[2];local v232=v98[4];local v233=v231 + 2 ;local v234={v96[v231](v96[v231 + 1 ],v96[v233])};for v349=1,v232 do v96[v233 + v349 ]=v234[v349];end local v235=v234[1];if v235 then local v402=0;while true do if (0==v402) then v96[v233]=v235;v90=v98[3];break;end end else v90=v90 + 1 ;end else local v236=v98[2];do return v96[v236],v96[v236 + 1 ];end end elseif (v99==75) then local v237=0;local v238;while true do if (0==v237) then v238=v98[2];do return v21(v96,v238,v91);end break;end end else v96[v98[2]]= #v96[v98[12 -9 ]];end elseif (v99<=78) then if (v99>77) then v96[v98[2]]={};else local v241=0;local v242;while true do if (v241==0) then v242=v98[2 + 0 ];v96[v242]=v96[v242](v21(v96,v242 + (3 -2) ,v91));break;end end end elseif (v99==79) then local v243=0;local v244;local v245;while true do if (v243==1) then v96[v244 + 1 ]=v245;v96[v244]=v245[v98[863 -(814 + 45) ]];break;end if (v243==0) then v244=v98[2];v245=v96[v98[10 -7 ]];v243=1;end end else local v246=0;local v247;local v248;local v249;local v250;while true do if (v246==1) then v91=(v249 + v247) -1 ;v250=0;v246=2;end if (2==v246) then for v492=v247,v91 do local v493=0;while true do if (v493==0) then v250=v250 + 1 ;v96[v492]=v248[v250];break;end end end break;end if (0==v246) then v247=v98[2];v248,v249=v89(v96[v247](v96[v247 + 1 ]));v246=1;end end end elseif (v99<=88) then if (v99<=84) then if (v99<=82) then if (v99==81) then local v251=0;local v252;local v253;local v254;while true do if (2==v251) then if (v253>0) then if (v254<=v96[v252 + 1 ]) then v90=v98[3];v96[v252 + (7 -4) ]=v254;end elseif (v254>=v96[v252 + 1 ]) then v90=v98[3];v96[v252 + 3 ]=v254;end break;end if (v251==1) then v254=v96[v252] + v253 ;v96[v252]=v254;v251=2;end if (v251==0) then v252=v98[2];v253=v96[v252 + 2 ];v251=1;end end else v96[v98[2]][v96[v98[3]]]=v98[4];end elseif (v99==83) then v96[v98[2]]= #v96[v98[3]];elseif (v96[v98[2]]==v98[4]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=86) then if (v99==(5 + 80)) then v96[v98[2]]=v96[v98[3]] * v96[v98[2 + 2 ]] ;else v96[v98[2]]=v98[3];end elseif (v99==87) then local v261=v98[2];local v262={};for v352=1, #v95 do local v353=v95[v352];for v404=0, #v353 do local v405=0;local v406;local v407;local v408;while true do if (v405==1) then v408=v406[2];if ((v407==v96) and (v408>=v261)) then v262[v408]=v407[v408];v406[1]=v262;end break;end if (v405==0) then v406=v353[v404];v407=v406[1];v405=1;end end end end else local v263=v98[2];v96[v263]=v96[v263](v21(v96,v263 + 1 ,v91));end elseif (v99<=92) then if (v99<=90) then if (v99==89) then v96[v98[2]]=v98[3] + v96[v98[889 -(261 + 624) ]] ;else v96[v98[2]]=v73[v98[3]];end elseif (v99==91) then local v268=v98[2];local v269,v270=v89(v96[v268](v96[v268 + 1 ]));v91=(v270 + v268) -1 ;local v271=0;for v354=v268,v91 do local v355=0;while true do if (v355==0) then v271=v271 + 1 ;v96[v354]=v269[v271];break;end end end else v96[v98[2]]=v98[3];end elseif (v99<=94) then if (v99==93) then local v274=0;local v275;while true do if (v274==0) then v275=v98[2];v96[v275]=v96[v275](v96[v275 + 1 ]);break;end end else v96[v98[2]]=v98[3]~=0 ;end elseif (v99==95) then v96[v98[2]]=v96[v98[3]]%v96[v98[4]] ;else for v356=v98[3 -1 ],v98[3] do v96[v356]=nil;end end elseif (v99<=112) then if (v99<=104) then if (v99<=100) then if (v99<=98) then if (v99==97) then v96[v98[2]]=v96[v98[3]];else local v280=v98[2];local v281=v98[1084 -(1020 + 60) ];local v282=v280 + 2 ;local v283={v96[v280](v96[v280 + 1 ],v96[v282])};for v358=1,v281 do v96[v282 + v358 ]=v283[v358];end local v284=v283[1];if v284 then local v409=0;while true do if (v409==0) then v96[v282]=v284;v90=v98[3];break;end end else v90=v90 + 1 ;end end elseif (v99>99) then local v285=0;local v286;while true do if (v285==0) then v286=v98[2];do return v21(v96,v286,v91);end break;end end else local v287=v98[2];v96[v287](v21(v96,v287 + 1 ,v91));end elseif (v99<=102) then if (v99>101) then local v288=v98[2];v96[v288](v21(v96,v288 + 1 ,v98[3]));else local v289=v87[v98[3]];local v290;local v291={};v290=v18({},{[v7("\13\233\137\32\236\8\90","\34\82\182\224\78\136\109")]=function(v361,v362) local v363=0;local v364;while true do if (0==v363) then v364=v291[v362];return v364[1][v364[1425 -(630 + 793) ]];end end end,[v7("\228\221\140\251\204\235\140\250\222\250","\158\187\130\226")]=function(v365,v366,v367) local v368=0;local v369;while true do if (v368==0) then v369=v291[v366];v369[1][v369[2]]=v367;break;end end end});for v370=1,v98[4] do local v371=0;local v372;while true do if (0==v371) then v90=v90 + 1 ;v372=v86[v90];v371=1;end if (v371==1) then if (v372[1]==97) then v291[v370-1 ]={v96,v372[9 -6 ]};else v291[v370-1 ]={v72,v372[3]};end v95[ #v95 + 1 ]=v291;break;end end end v96[v98[2]]=v40(v289,v290,v73);end elseif (v99>103) then v96[v98[2]][v98[3]]=v96[v98[4]];else for v373=v98[2],v98[3] do v96[v373]=nil;end end elseif (v99<=108) then if (v99<=106) then if (v99==105) then local v295=0;local v296;local v297;while true do if (v295==0) then v296=v98[1 + 1 ];v297=v96[v296];v295=1;end if (v295==1) then for v501=v296 + 1 ,v91 do v15(v297,v96[v501]);end break;end end else do return v96[v98[2]];end end elseif (v99>107) then local v298=v98[2];local v299={v96[v298]()};local v300=v98[4];local v301=0;for v375=v298,v300 do local v376=0;while true do if (v376==0) then v301=v301 + 1 ;v96[v375]=v299[v301];break;end end end else local v302=0;local v303;local v304;local v305;while true do if (v302==2) then if (v304>(0 -0)) then if (v305<=v96[v303 + 1 ]) then v90=v98[3];v96[v303 + 3 ]=v305;end elseif (v305>=v96[v303 + (1748 -(760 + 987)) ]) then v90=v98[3];v96[v303 + 3 ]=v305;end break;end if (v302==0) then v303=v98[2];v304=v96[v303 + 2 ];v302=1;end if (1==v302) then v305=v96[v303] + v304 ;v96[v303]=v305;v302=2;end end end elseif (v99<=(2023 -(1789 + 124))) then if (v99>109) then if (v96[v98[2]]>v96[v98[4]]) then v90=v90 + 1 ;else v90=v90 + v98[3] ;end elseif v96[v98[2]] then v90=v90 + (767 -(745 + 21)) ;else v90=v98[3];end elseif (v99==111) then local v306=v98[2];local v307={v96[v306](v21(v96,v306 + 1 ,v91))};local v308=0;for v377=v306,v98[4] do local v378=0;while true do if (v378==0) then v308=v308 + 1 ;v96[v377]=v307[v308];break;end end end else v96[v98[2]]=v40(v87[v98[3]],nil,v73);end elseif (v99<=120) then if (v99<=116) then if (v99<=114) then if (v99>113) then v96[v98[2]]=v72[v98[2 + 1 ]];elseif (v96[v98[2]]<=v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99==115) then local v312=v98[2];v96[v312]=v96[v312]();else local v314=0;local v315;while true do if (v314==0) then v315=v98[5 -3 ];v96[v315]=v96[v315](v21(v96,v315 + (3 -2) ,v98[3]));break;end end end elseif (v99<=118) then if (v99>117) then local v316=v98[2];local v317,v318=v89(v96[v316](v21(v96,v316 + 1 ,v91)));v91=(v318 + v316) -1 ;local v319=0;for v379=v316,v91 do local v380=0;while true do if (v380==0) then v319=v319 + 1 + 0 ;v96[v379]=v317[v319];break;end end end else v72[v98[3]]=v96[v98[2 + 0 ]];end elseif (v99==119) then if (v98[2]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end else v96[v98[2]]=v98[3]~=0 ;end elseif (v99<=124) then if (v99<=122) then if (v99==121) then v96[v98[2]]=v96[v98[3]][v98[4]];else v96[v98[2]]=v98[3]/v96[v98[4]] ;end elseif (v99==(1178 -(87 + 968))) then local v326=v98[2];local v327={v96[v326](v21(v96,v326 + 1 ,v91))};local v328=0;for v381=v326,v98[17 -13 ] do local v382=0;while true do if (v382==0) then v328=v328 + 1 ;v96[v381]=v327[v328];break;end end end else v96[v98[2 + 0 ]]();end elseif (v99<=126) then if (v99==125) then local v329=v98[2];local v330=v96[v329];local v331=v96[v329 + 2 ];if (v331>0) then if (v330>v96[v329 + 1 ]) then v90=v98[3];else v96[v329 + 3 ]=v330;end elseif (v330<v96[v329 + 1 ]) then v90=v98[3];else v96[v329 + 3 ]=v330;end elseif (v96[v98[2]]~=v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=(286 -159)) then v96[v98[2]]=v96[v98[3]] -v96[v98[4]] ;elseif (v99==128) then local v414=0;local v415;local v416;local v417;local v418;while true do if (v414==0) then v415=v98[2];v416={v96[v415]()};v414=1;end if (2==v414) then for v531=v415,v417 do v418=v418 + 1 ;v96[v531]=v416[v418];end break;end if (1==v414) then v417=v98[4];v418=0;v414=2;end end else v96[v98[2]]=v96[v98[3]] + v96[v98[4]] ;end v90=v90 + 1 ;end end;end return v40(v39(),{},v28)(...);end return v23("LOL!",v17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--
